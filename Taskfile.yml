version: '3'

vars:
  PYTHON: python3
  VENV_DIR: .venv
  REQUIREMENTS: requirements.txt

tasks:
  venv:
    desc: Create Python virtual environment
    cmds:
      - "{{.PYTHON}} -m venv {{.VENV_DIR}}"
      - |
        echo "Virtual environment created at {{.VENV_DIR}}"
        echo "Activate with: source {{.VENV_DIR}}/bin/activate"
    status:
      - "test -d {{.VENV_DIR}}"

  install:
    desc: Install dependencies in virtual environment
    deps: [venv]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        pip install --upgrade pip
        pip install -r {{.REQUIREMENTS}}
    sources:
      - "{{.REQUIREMENTS}}"

  dev-install:
    desc: Install development dependencies
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        pip install -e .

  clean:
    desc: Clean up virtual environment and cache files
    cmds:
      - |
        rm -rf {{.VENV_DIR}}
        find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
        find . -type f -name "*.pyc" -delete 2>/dev/null || true
        rm -rf *.egg-info build dist

  test:
    desc: Run tests
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        python -m pytest tests/ -v

  lint:
    desc: Run code linting
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        echo "Running black code formatter check..."
        black --check microflow/
        echo "Running flake8 linter..."
        flake8 microflow/
        echo "Running mypy type checker..."
        mypy microflow/

  format:
    desc: Format code
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        echo "Formatting code with black..."
        black microflow/

  run:
    desc: Run the microflow API server
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        python -m microflow.api

  example:
    desc: Run basic example workflow
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        python examples/basic_workflow.py

  example-n8n:
    desc: Run n8n-style nodes example
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        python examples/n8n_style_nodes.py

  example-api:
    desc: Run API workflow example
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        python examples/api_workflow.py

  example-subworkflow:
    desc: Run sub-workflow example
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        python examples/subworkflow_example.py

  example-all:
    desc: Run all examples
    deps: [install]
    cmds:
      - |
        source {{.VENV_DIR}}/bin/activate
        echo "ðŸ”„ Running basic workflow example..."
        python examples/basic_workflow.py
        echo -e "\n\nðŸ”„ Running n8n-style nodes example..."
        python examples/n8n_style_nodes.py
        echo -e "\n\nðŸ”„ Running API workflow example..."
        python examples/api_workflow.py
        echo -e "\n\nðŸ”„ Running sub-workflow example..."
        python examples/subworkflow_example.py
        echo -e "\n\nâœ… All examples completed!"

  check:
    desc: Run all checks (lint + test)
    deps: [install]
    cmds:
      - task: lint
      - task: test

  setup:
    desc: Complete project setup
    cmds:
      - task: venv
      - task: install
      - |
        echo "âœ… Setup complete!"
        echo "ðŸ“‹ Available commands:"
        echo "  task example       - Run basic example"
        echo "  task example-all   - Run all examples"
        echo "  task lint          - Check code quality"
        echo "  task test          - Run tests"
        echo "  task format        - Format code"